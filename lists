# Create a list

L = ["Michael Jackson", 10.1, 1982]
print(L)


# Print the elements on each index

print('the same element using negative and positive indexing:\n Postive:',L[0],
'\n Negative:' , L[-3]  )
print('the same element using negative and positive indexing:\n Postive:',L[1],
'\n Negative:' , L[-2]  )
print('the same element using negative and positive indexing:\n Postive:',L[2],
'\n Negative:' , L[-1]  )


# Sample List

["Michael Jackson", 10.1, 1982, [1, 2], ("A", 1)]


# Sample List

L = ["Michael Jackson", 10.1,1982,"MJ",1]
print(L)


# List slicing

print(L[3:5])


# Use extend to add elements to list

L = [ "Michael Jackson", 10.2]
L.extend(['pop', 10])
print(L)


# Use append to add elements to list

L = [ "Michael Jackson", 10.2]
L.append(['pop', 10])
print(L)


# Use extend to add elements to list

L = [ "Michael Jackson", 10.2]
L.extend(['pop', 10])
print(L)


# Use append to add elements to list

L.append(['a','b'])
print(L)

# Change the element based on the index

A = ["disco", 10, 1.2]
print('Before change:', A)
A[0] = 'hard rock'
print('After change:', A)

# Delete the element based on the index

print('Before change:', A)
del (A[0])
print('After change:', A)


# Split the string, default is by space

print('hard rock'.split())


# Split the string by comma

print('A,B,C,D'.split(','))


# Copy (copy by reference) the list A

A = ["hard rock", 10, 1.2]
B = A
print('A:', A)
print('B:', B)


# Examine the copy by reference

print('B[0]:', B[0])
A[0] = "banana"
print('B[0]:', B[0])


# Clone (clone by value) the list A

B = A[:]
print(B)


#Now change A, B will not change:
print('B[0]:', B[0])
A[0] = "hard rock"
print('B[0]:', B[0])


#Create a list a_list, with the following elements 1, hello, [1,2,3] and True
a_list=['1','hello',[1, 2, 3], True]
print(a_list)


#Find the value stored at index 1 of a_list
print(a_list[1])


#Retrieve the elements stored at index 1, 2 and 3 of a_list.
print(a_list[1:4])


#Concatenate the following lists A = [1, 'a'] and B = [2, 1, 'f'] :
A = [1, 'a']
B = [2, 1, 'f']
print(A+B)
